generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Tenant {
  id   String @id @map("_id") @default(auto()) @db.ObjectId
  name String
  slug String @unique

  users      User[]
  assets     Asset[]
  sites      Site[]
  areas      Area[]
  lines      Line[]
  stations   Station[]
  workOrders WorkOrder[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("tenants")
}

model User {
  id           String @id @map("_id") @default(auto()) @db.ObjectId
  tenantId     String @map("tenant_id") @db.ObjectId
  email        String @unique
  passwordHash String @map("password_hash")
  name         String
  role         String @default("user")

  tenant            Tenant      @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  createdWorkOrders WorkOrder[] @relation("CreatedBy")
  assignedWorkOrders WorkOrder[] @relation("Assignee")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

enum WorkOrderPriority {
  low
  medium
  high
  urgent
}

enum WorkOrderStatus {
  requested
  assigned
  in_progress
  completed
  cancelled
}

enum AssetStatus {
  operational
  maintenance
  down
  retired
  decommissioned
}

model Asset {
  id       String @id @map("_id") @default(auto()) @db.ObjectId
  tenantId String @map("tenant_id") @db.ObjectId
  siteId   String? @map("site_id") @db.ObjectId
  areaId   String? @map("area_id") @db.ObjectId
  lineId   String? @map("line_id") @db.ObjectId
  stationId String? @map("station_id") @db.ObjectId
  code     String
  name     String
  location String?
  category String?
  purchaseDate DateTime? @map("purchase_date")
  cost     Float?   @map("cost")
  status   AssetStatus @default(operational)
  criticality Int @default(2)
  manufacturer String?
  modelNumber String? @map("model_number")
  serialNumber String? @map("serial_number")
  commissionedAt DateTime? @map("commissioned_at")
  warrantyProvider String? @map("warranty_provider")
  warrantyContact String? @map("warranty_contact")
  warrantyExpiresAt DateTime? @map("warranty_expires_at")
  warrantyNotes String? @map("warranty_notes")

  tenant    Tenant     @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  site      Site?      @relation(fields: [siteId], references: [id])
  area      Area?      @relation(fields: [areaId], references: [id])
  line      Line?      @relation(fields: [lineId], references: [id])
  station   Station?   @relation(fields: [stationId], references: [id])
  workOrders WorkOrder[]
  downtimeLogs DowntimeLog[]
  bomItems AssetBomItem[]


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("assets")
  @@index([tenantId])
  @@index([tenantId, status])
  @@index([tenantId, siteId])
  @@index([tenantId, lineId])
  @@index([tenantId, stationId])
  @@index([tenantId, areaId])
  @@unique([tenantId, code], map: "assets_tenant_code_key")
}

model Site {
  id       String @id @map("_id") @default(auto()) @db.ObjectId
  tenantId String @map("tenant_id") @db.ObjectId
  code     String? @map("code")
  name     String
  description String?

  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  areas  Area[]
  assets Asset[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("sites")
  @@index([tenantId])
  @@unique([tenantId, code], map: "sites_tenant_code_key")
}

model Area {
  id       String @id @map("_id") @default(auto()) @db.ObjectId
  tenantId String @map("tenant_id") @db.ObjectId
  siteId   String @map("site_id") @db.ObjectId
  code     String? @map("code")
  name     String
  description String?

  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  site   Site   @relation(fields: [siteId], references: [id], onDelete: Cascade)
  lines  Line[]
  assets Asset[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("areas")
  @@index([tenantId])
  @@index([siteId])
  @@unique([tenantId, siteId, code], map: "areas_site_code_key")
}

model Line {
  id       String @id @map("_id") @default(auto()) @db.ObjectId
  tenantId String @map("tenant_id") @db.ObjectId
  areaId   String @map("area_id") @db.ObjectId
  code     String? @map("code")
  name     String
  description String?

  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  area   Area   @relation(fields: [areaId], references: [id], onDelete: Cascade)
  stations Station[]
  assets Asset[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("lines")
  @@index([tenantId])
  @@index([areaId])
  @@unique([tenantId, areaId, code], map: "lines_area_code_key")
}

model Station {
  id       String @id @map("_id") @default(auto()) @db.ObjectId
  tenantId String @map("tenant_id") @db.ObjectId
  lineId   String @map("line_id") @db.ObjectId
  code     String? @map("code")
  name     String
  description String?
  position Int? @map("position")

  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  line   Line   @relation(fields: [lineId], references: [id], onDelete: Cascade)
  assets Asset[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("stations")
  @@index([tenantId])
  @@index([lineId])
  @@unique([tenantId, lineId, code], map: "stations_line_code_key")
}

model AssetBomItem {
  id       String @id @map("_id") @default(auto()) @db.ObjectId
  tenantId String @map("tenant_id") @db.ObjectId
  assetId  String @map("asset_id") @db.ObjectId
  position Int    @default(0)
  reference String @map("reference")
  description String
  quantity Float? @map("quantity")
  unit     String? @map("unit")
  notes    String? @map("notes")

  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  asset  Asset  @relation(fields: [assetId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("asset_bom_items")
  @@index([assetId])
  @@index([tenantId, assetId], map: "asset_bom_tenant_asset_idx")
}

model WorkOrder {
  id            String            @id @map("_id") @default(auto()) @db.ObjectId
  tenantId      String            @map("tenant_id") @db.ObjectId
  siteId        String?           @map("site_id") @db.ObjectId
  lineId        String?           @map("line_id") @db.ObjectId
  title         String
  description   String?
  priority      WorkOrderPriority @default(medium)
  status        WorkOrderStatus   @default(requested)
  assetId       String?           @map("asset_id") @db.ObjectId
  assigneeId    String?           @map("assigned_to") @db.ObjectId
  category      String?
  dueDate       DateTime?         @map("due_date")
  attachments   String[]          @default([])

  partsUsed     Json?             @map("parts_used")
  signatures    Json?
  timeSpentMin  Int?              @map("time_spent_min")
  failureCode   String?           @map("failure_code")
  pmTaskId      String?           @map("pm_task_id") @db.ObjectId
  createdBy     String            @map("created_by") @db.ObjectId
  startedAt     DateTime?         @map("started_at")
  completedAt   DateTime?         @map("completed_at")
  isPreventive  Boolean           @map("is_preventive") @default(false)

  tenant        Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  assignee      User?    @relation("Assignee", fields: [assigneeId], references: [id])
  createdByUser User     @relation("CreatedBy", fields: [createdBy], references: [id])

  asset         Asset?   @relation(fields: [assetId], references: [id])


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("work_orders")
  @@index([tenantId, siteId], map: "work_orders_tenant_site_idx")
  @@index([tenantId, status], map: "work_orders_tenant_status_idx")
  @@index([tenantId, dueDate], map: "work_orders_tenant_duedate_idx")
  @@index([tenantId, status, priority], map: "work_orders_tenant_status_priority_idx")
  @@index([tenantId, completedAt], map: "work_orders_tenant_completed_idx")
}

model DowntimeLog {
  id        String   @id @map("_id") @default(auto()) @db.ObjectId
  tenantId  String   @map("tenant_id") @db.ObjectId
  assetId   String   @map("asset_id") @db.ObjectId
  siteId    String?  @map("site_id") @db.ObjectId
  lineId    String?  @map("line_id") @db.ObjectId
  startedAt DateTime @map("started_at")
  endedAt   DateTime @map("ended_at")
  minutes   Int      @default(0)

  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  asset  Asset  @relation(fields: [assetId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("downtime_logs")
  @@index([tenantId, startedAt], map: "downtime_tenant_started_idx")
  @@index([tenantId, assetId], map: "downtime_tenant_asset_idx")
}

model Part {
  id        String @id @map("_id") @default(auto()) @db.ObjectId
  tenantId  String @map("tenant_id") @db.ObjectId
  siteId    String? @map("site_id") @db.ObjectId
  name      String
  sku       String? @unique
  onHand    Int     @map("on_hand") @default(0)
  minLevel  Int     @map("min_level") @default(0)
  cost      Float?  @map("cost")
  vendor    String?

  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("parts")
  @@index([tenantId])
  @@index([minLevel, onHand, tenantId], map: "parts_min_onhand_tenant_idx")
}
