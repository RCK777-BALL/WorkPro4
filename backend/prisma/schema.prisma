generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum WorkOrderStatus {
  requested
  assigned
  in_progress
  completed
  cancelled
}

enum WorkOrderPriority {
  low
  medium
  high
  urgent
}

model Tenant {
  id         String      @id @map("_id") @default(auto()) @db.ObjectId
  name       String
  slug       String      @unique
  users      User[]
  assets     Asset[]
  workOrders WorkOrder[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("tenants")
}

model User {
  id                  String      @id @map("_id") @default(auto()) @db.ObjectId
  email               String      @unique
  passwordHash        String      @map("password_hash")
  name                String
  roles               String[]    @default([])
  tenantId            String      @map("tenant_id") @db.ObjectId
  tenant              Tenant      @relation(fields: [tenantId], references: [id])
  assignedWorkOrders  WorkOrder[] @relation("AssignedWorkOrders")
  createdWorkOrders   WorkOrder[] @relation("CreatedWorkOrders")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Asset {
  id         String      @id @map("_id") @default(auto()) @db.ObjectId
  tenantId   String      @map("tenant_id") @db.ObjectId
  tenant     Tenant      @relation(fields: [tenantId], references: [id])
  code       String?
  name       String
  workOrders WorkOrder[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("assets")
}

model WorkOrder {
  id            String            @id @map("_id") @default(auto()) @db.ObjectId
  tenantId      String            @map("tenant_id") @db.ObjectId
  tenant        Tenant            @relation(fields: [tenantId], references: [id])
  title         String
  description   String?
  priority      WorkOrderPriority @default(medium)
  status        WorkOrderStatus   @default(requested)
  assetId       String?           @map("asset_id") @db.ObjectId
  asset         Asset?            @relation(fields: [assetId], references: [id])
  lineName      String?           @map("line_name")
  stationNumber String?           @map("station_number")
  assignees     String[]          @default([])
  checklists    Json?
  createdBy     String            @map("created_by") @db.ObjectId
  createdByUser User              @relation("CreatedWorkOrders", fields: [createdBy], references: [id])
  assigneeId    String?           @map("assignee_id") @db.ObjectId
  assignee      User?             @relation("AssignedWorkOrders", fields: [assigneeId], references: [id])
  timeSpentMin  Int?              @map("time_spent_min")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("work_orders")
}
